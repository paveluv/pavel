module Pavel.Xnu.Types.CEnums where

#include <sys/attr.h>
#include <sys/acl.h>
#include <sys/stat.h>
#include <sys/vnode.h>

-------------------------------------------------------------------------------
-- | Enums autogenerated by c2hs. Re-exported by Pavel.Xnu.Types.
-------------------------------------------------------------------------------

-- | Options to @getAttrList@.
{#enum define FsOpt
  { FSOPT_NOFOLLOW as FSOPT_NOFOLLOW
  , FSOPT_REPORT_FULLSIZE as FSOPT_REPORT_FULLSIZE
  , FSOPT_PACK_INVAL_ATTRS as FSOPT_PACK_INVAL_ATTRS
  , FSOPT_ATTR_CMN_EXTENDED as FSOPT_ATTR_CMN_EXTENDED
  }
  deriving (Bounded, Eq, Read, Show)
#}

-- | Vnode types.  VNON means no type.
-- From @/usr/include/sys/vnode.h@.
-- Returned by 'getAttrList' for @ATTR_CMN_OBJTYPE@.
{#enum vtype as VType {} deriving (Bounded, Eq, Read, Show)#}

-- | Vnode tag types.
-- From @/usr/include/sys/vnode.h@.
-- Returned by 'getAttrList' for @ATTR_CMN_OBJTAG@.
{#enum vtagtype as VTagType {} deriving (Bounded, Eq, Read, Show)#}

-- | File flags (both user and superuser).
-- From @/usr/include/sys/stat.h@.
{#enum define FileFlag
  { UF_NODUMP as UF_NODUMP
  , UF_IMMUTABLE as UF_IMMUTABLE
  , UF_APPEND as UF_APPEND
  , UF_OPAQUE as UF_OPAQUE
  , UF_COMPRESSED as UF_COMPRESSED
  , UF_TRACKED as UF_TRACKED
  , UF_DATAVAULT as UF_DATAVAULT
  , UF_HIDDEN as UF_HIDDEN

  , SF_ARCHIVED as SF_ARCHIVED
  , SF_IMMUTABLE as SF_IMMUTABLE
  , SF_APPEND as SF_APPEND
  , SF_RESTRICTED as SF_RESTRICTED
  , SF_NOUNLINK as SF_NOUNLINK
  }
  deriving (Bounded, Eq, Read, Show)
#}

-- | Kauth ACE kind. Stored in first 4 bits (actually 2 bits) of @ace_flags@
-- field of @struct kauth_ace@.
-- See @/usr/include/sys/kauth.h@.
{#enum define AceKind
  { KAUTH_ACE_PERMIT as KAUTH_ACE_PERMIT
  , KAUTH_ACE_DENY as KAUTH_ACE_DENY
  , KAUTH_ACE_AUDIT as KAUTH_ACE_AUDIT  -- "not implemented"
  , KAUTH_ACE_ALARM as KAUTH_ACE_ALARM  -- "not implemented"
  }
#}

-- | Kauth ACE control flags.
{#enum define AceInheritControl
  { KAUTH_ACE_FILE_INHERIT as KAUTH_ACE_FILE_INHERIT
  , KAUTH_ACE_DIRECTORY_INHERIT as KAUTH_ACE_DIRECTORY_INHERIT
  , KAUTH_ACE_LIMIT_INHERIT as KAUTH_ACE_LIMIT_INHERIT
  , KAUTH_ACE_ONLY_INHERIT as KAUTH_ACE_ONLY_INHERIT
  }
#}

-- | Kauth ACE audit/alarm flags.
-- "not implemented"
{#enum define AceAuditAlarm
  { KAUTH_ACE_SUCCESS as KAUTH_ACE_SUCCESS
  , KAUTH_ACE_FAILURE as KAUTH_ACE_FAILURE
  }
#}

-- | Kauth ACE rights flags.
-- "never tested, but may be present in an ACL"
{#enum define AceRights
  { KAUTH_ACE_GENERIC_ALL as KAUTH_ACE_GENERIC_ALL
  , KAUTH_ACE_GENERIC_EXECUTE as KAUTH_ACE_GENERIC_EXECUTE
  , KAUTH_ACE_GENERIC_WRITE as KAUTH_ACE_GENERIC_WRITE
  , KAUTH_ACE_GENERIC_READ as KAUTH_ACE_GENERIC_READ
  }
#}
